"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChannelAmountLimitsToJSON = exports.ChannelAmountLimitsFromJSONTyped = exports.ChannelAmountLimitsFromJSON = exports.instanceOfChannelAmountLimits = void 0;
var runtime_1 = require("../../runtime");
/**
 * Check if a given object implements the ChannelAmountLimits interface.
 */
function instanceOfChannelAmountLimits(value) {
    var isInstance = true;
    return isInstance;
}
exports.instanceOfChannelAmountLimits = instanceOfChannelAmountLimits;
function ChannelAmountLimitsFromJSON(json) {
    return ChannelAmountLimitsFromJSONTyped(json, false);
}
exports.ChannelAmountLimitsFromJSON = ChannelAmountLimitsFromJSON;
function ChannelAmountLimitsFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'currency': !(0, runtime_1.exists)(json, 'currency') ? undefined : json['currency'],
        'minLimit': !(0, runtime_1.exists)(json, 'min_limit') ? undefined : json['min_limit'],
        'maxLimit': !(0, runtime_1.exists)(json, 'max_limit') ? undefined : json['max_limit'],
    };
}
exports.ChannelAmountLimitsFromJSONTyped = ChannelAmountLimitsFromJSONTyped;
function ChannelAmountLimitsToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'currency': value.currency,
        'min_limit': value.minLimit,
        'max_limit': value.maxLimit,
    };
}
exports.ChannelAmountLimitsToJSON = ChannelAmountLimitsToJSON;
